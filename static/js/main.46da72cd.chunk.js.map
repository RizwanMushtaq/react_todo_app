{"version":3,"sources":["components/TodoTitle.js","components/TodoInput.js","App.js","reportWebVitals.js","index.js"],"names":["title","fontSize","margin","TodoTitle","style","TodoInput","props","type","className","onChange","console","log","document","querySelector","value","trim","disabled","pointerEvents","onClick","addTodoHandler","App","addTodo","inputFieldText","setState","state","todoArray","concat","id","count","done","this","map","item","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"uSAEMA,EAAQ,CACVC,SAAU,OACVC,OAAQ,QAWGC,MARf,WACI,OACI,8BACI,oBAAIC,MAAOJ,EAAX,4B,MC2BGK,MAlCf,SAAmBC,GAaf,OACI,gCACI,uBAAOC,KAAK,OACZC,UAAU,aACVC,SAfR,WACIC,QAAQC,IAAI,4BAC8C,KAAvDC,SAASC,cAAc,eAAeC,MAAMC,QAC3CH,SAASC,cAAc,kBAAkBG,UAAW,EACpDJ,SAASC,cAAc,eAAeT,MAAMa,cAAgB,SAE5DL,SAASC,cAAc,kBAAkBG,UAAW,EACpDJ,SAASC,cAAc,eAAeT,MAAMa,cAAgB,UAW5D,sBAAMT,UAAU,aAChBU,QAAW,kBAAKZ,EAAMa,eAAeP,SAASC,cAAc,eAAeC,QAD3E,SAGA,wBACAN,UAAU,gBACVQ,UAAQ,EAFR,uBCsCGI,E,kDAvDb,WAAYd,GAAQ,IAAD,8BACjB,cAAMA,IAQRe,QAAU,SAACC,GACTZ,QAAQC,IAAI,oBACZD,QAAQC,IAAIW,GAEZ,EAAKC,UAAS,SAAAC,GAQZ,MAAO,CACLC,UARgBD,EAAMC,UAAUC,OAChC,CAACC,GAAIH,EAAMI,MACX5B,MAAOsB,EACPO,MAAM,IAMND,MAJYJ,EAAMI,MAAQ,MAQ9BlB,QAAQC,IAAI,EAAKa,MAAMI,QAxBvB,EAAKJ,MAAQ,CACXI,MAAO,EACPH,UAAW,IALI,E,0CA8BnB,WACE,OACE,sBAAKjB,UAAU,MAAf,UAEE,cAAC,EAAD,IAEA,cAAC,EAAD,CAAWW,eAAkBW,KAAKT,UAElC,oBAAIb,UAAU,SAAd,SACGsB,KAAKN,MAAMC,UAAUM,KAAI,SAAAC,GAAI,OAC5B,+BACGA,EAAKhC,MACN,gCACE,0CACA,iDAJKgC,EAAKL,gB,GA1CRM,aCKHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjC,SAASkC,eAAe,SAM1BZ,M","file":"static/js/main.46da72cd.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst title = {\r\n    fontSize: '3rem',\r\n    margin: '1rem'\r\n}\r\n\r\nfunction TodoTitle() {\r\n    return (\r\n        <div>\r\n            <h1 style={title}>My ToDo App</h1>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoTitle\r\n","import React from 'react'\r\nimport './styleTodoInput.css' \r\n\r\nfunction TodoInput(props) {\r\n    \r\n    function updateAddButton(){\r\n        console.log(\"updateAddButton function\")\r\n        if(document.querySelector('.inputField').value.trim() === '' ){\r\n            document.querySelector('.addTodoButton').disabled = true;\r\n            document.querySelector('.buttonSpan').style.pointerEvents = 'none';\r\n        }else{\r\n            document.querySelector('.addTodoButton').disabled = false;\r\n            document.querySelector('.buttonSpan').style.pointerEvents = 'all';\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <input type='text' \r\n            className='inputField'\r\n            onChange= {updateAddButton}>\r\n            </input>\r\n\r\n            <span className='buttonSpan'\r\n            onClick = {()=> props.addTodoHandler(document.querySelector('.inputField').value)}>\r\n\r\n            <button\r\n            className='addTodoButton' \r\n            disabled>\r\n            Add</button>\r\n            \r\n            </span>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoInput\r\n\r\n","import React, { Component } from 'react'\r\nimport './App.css';\r\nimport './components/styleTodoList.css'\r\n\r\nimport TodoTitle from './components/TodoTitle'\r\nimport TodoInput from './components/TodoInput'\r\n\r\nclass App extends Component {\r\n  \r\n  constructor(props) {\r\n    super(props)\r\n  \r\n    this.state = {\r\n      count: 1,\r\n      todoArray: []\r\n    }\r\n  }\r\n\r\n  addTodo = (inputFieldText) =>{\r\n    console.log(\"addToDO function\")\r\n    console.log(inputFieldText)\r\n\r\n    this.setState(state => {\r\n      const todoArray = state.todoArray.concat(\r\n        {id: state.count,\r\n        title: inputFieldText,\r\n        done: false}\r\n      )\r\n      const count = state.count + 1\r\n\r\n      return {\r\n        todoArray,\r\n        count\r\n      }\r\n    })\r\n\r\n    console.log(this.state.count);\r\n  }\r\n  \r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n\r\n        <TodoTitle />\r\n        \r\n        <TodoInput addTodoHandler = {this.addTodo}></TodoInput>\r\n\r\n        <ul className='todoUL'>\r\n          {this.state.todoArray.map(item => (\r\n            <li key={item.id}> \r\n              {item.title}\r\n              <div>\r\n                <button>Done</button>\r\n                <button>Delete</button>\r\n              </div> \r\n            </li>\r\n          ))}\r\n        </ul>\r\n\r\n     </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}